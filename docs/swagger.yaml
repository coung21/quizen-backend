basePath: /v1
definitions:
  common.ErrResp:
    properties:
      error:
        type: string
      status:
        type: integer
    type: object
  common.Image:
    properties:
      cloud_name:
        type: string
      ext:
        type: string
      height:
        type: integer
      url:
        type: string
      width:
        type: integer
    type: object
  model.Flashcard:
    properties:
      created_at:
        type: string
      definition:
        type: string
      id:
        type: string
      image:
        $ref: '#/definitions/common.Image'
      study_set_id:
        type: string
      term:
        type: string
      updated_at:
        type: string
    required:
    - definition
    - term
    type: object
  model.StudySet:
    properties:
      created_at:
        type: string
      description:
        type: string
      flashcards:
        items:
          $ref: '#/definitions/model.Flashcard'
        type: array
      id:
        type: string
      set_name:
        type: string
      updated_at:
        type: string
      user_id:
        type: string
    required:
    - set_name
    type: object
  model.User:
    properties:
      avatar:
        $ref: '#/definitions/common.Image'
      created_at:
        type: string
      email:
        type: string
      id:
        type: string
      is_verified:
        type: boolean
      password:
        type: string
      updated_at:
        type: string
      username:
        type: string
    type: object
  transport.LoginReq:
    properties:
      email:
        type: string
      password:
        type: string
    type: object
  transport.LoginResp:
    properties:
      session_id:
        type: string
      token:
        properties:
          access_token:
            type: string
          refresh_token:
            type: string
          refresh_token_exp:
            type: string
        type: object
      user:
        $ref: '#/definitions/model.User'
    type: object
  transport.createUserRequest:
    properties:
      email:
        type: string
      password:
        type: string
      username:
        type: string
    required:
    - email
    - password
    - username
    type: object
  transport.renewTokenReq:
    properties:
      refresh_token:
        type: string
      session_id:
        type: string
    required:
    - refresh_token
    - session_id
    type: object
  transport.renewTokenResp:
    properties:
      access_token:
        type: string
    type: object
host: localhost:8080
info:
  contact: {}
  description: This is a flashcard learning app API.
  title: Quizen API
  version: "1.0"
paths:
  /study-set:
    post:
      consumes:
      - application/json
      description: Create a new study set
      parameters:
      - description: StudySet object that needs to be created
        in: body
        name: studySet
        required: true
        schema:
          $ref: '#/definitions/model.StudySet'
      - description: Bearer + Access Token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/model.StudySet'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/common.ErrResp'
      summary: Create a new study set
      tags:
      - study-set
    put:
      consumes:
      - application/json
      description: Update a study set
      parameters:
      - description: StudySet
        in: body
        name: StudySet
        required: true
        schema:
          $ref: '#/definitions/model.StudySet'
      - description: Bearer + Access Token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.StudySet'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/common.ErrResp'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/common.ErrResp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/common.ErrResp'
      summary: Update a study set
      tags:
      - study-set
  /study-set/{id}:
    delete:
      description: Delete a study set
      parameters:
      - description: Study set ID
        in: path
        name: id
        required: true
        type: string
      - description: Bearer + Access Token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No content
          schema:
            type: string
        "404":
          description: Study set not found
          schema:
            $ref: '#/definitions/common.ErrResp'
        "500":
          description: Failed to delete study set
          schema:
            $ref: '#/definitions/common.ErrResp'
      summary: Delete a study set
      tags:
      - study-set
  /upload:
    post:
      consumes:
      - multipart/form-data
      description: Upload file to S3
      parameters:
      - description: File to upload
        in: formData
        name: file
        required: true
        type: file
      - description: Folder to save the file
        in: formData
        name: folder
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/common.Image'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/common.ErrResp'
      summary: Upload file
      tags:
      - upload
  /users/login:
    post:
      consumes:
      - application/json
      description: Login
      parameters:
      - description: email and password
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/transport.LoginReq'
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/transport.LoginResp'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/common.ErrResp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/common.ErrResp'
      summary: Login
      tags:
      - user
  /users/logout/{session_id}:
    delete:
      consumes:
      - application/json
      description: Logout
      parameters:
      - description: session_id
        in: path
        name: session_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/common.ErrResp'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/common.ErrResp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/common.ErrResp'
      summary: Logout
      tags:
      - user
  /users/register:
    post:
      consumes:
      - application/json
      description: Register a new user and send a verification email
      parameters:
      - description: User info
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/transport.createUserRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Success
          schema:
            $ref: '#/definitions/model.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/common.ErrResp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/common.ErrResp'
      summary: Register a new user
      tags:
      - user
  /users/renew-token:
    post:
      consumes:
      - application/json
      description: Renew access token
      parameters:
      - description: User info
        in: body
        name: ususer
        required: true
        schema:
          $ref: '#/definitions/transport.renewTokenReq'
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/transport.renewTokenResp'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/common.ErrResp'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/common.ErrResp'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/common.ErrResp'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/common.ErrResp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/common.ErrResp'
      summary: Renew access token
      tags:
      - user
  /users/verify-email:
    get:
      consumes:
      - application/json
      description: Verify email with code
      parameters:
      - description: Email
        in: query
        name: email
        required: true
        type: string
      - description: Code
        in: query
        name: code
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/common.ErrResp'
      summary: Verify email
      tags:
      - user
swagger: "2.0"
