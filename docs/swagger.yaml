basePath: /v1
definitions:
  common.ErrResp:
    properties:
      error:
        type: string
      status:
        type: integer
    type: object
  common.Image:
    properties:
      cloud_name:
        type: string
      ext:
        type: string
      height:
        type: integer
      url:
        type: string
      width:
        type: integer
    type: object
  model.User:
    properties:
      avatar:
        $ref: '#/definitions/common.Image'
      created_at:
        type: string
      email:
        type: string
      id:
        type: string
      is_verified:
        type: boolean
      password:
        type: string
      updated_at:
        type: string
      username:
        type: string
    type: object
  transport.LoginReq:
    properties:
      email:
        type: string
      password:
        type: string
    type: object
  transport.LoginResp:
    properties:
      session_id:
        type: string
      token:
        properties:
          access_token:
            type: string
          refresh_token:
            type: string
          refresh_token_exp:
            type: string
        type: object
      user:
        $ref: '#/definitions/model.User'
    type: object
  transport.createUserRequest:
    properties:
      email:
        type: string
      password:
        type: string
      username:
        type: string
    required:
    - email
    - password
    - username
    type: object
host: localhost:8080
info:
  contact: {}
  description: This is a flashcard learning app API.
  title: Quizen API
  version: "1.0"
paths:
  /users/login:
    post:
      consumes:
      - application/json
      description: Login
      parameters:
      - description: email and password
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/transport.LoginReq'
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/transport.LoginResp'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/common.ErrResp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/common.ErrResp'
      summary: Login
      tags:
      - user
  /users/logout/{session_id}:
    delete:
      consumes:
      - application/json
      description: Logout
      parameters:
      - description: session_id
        in: path
        name: session_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/common.ErrResp'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/common.ErrResp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/common.ErrResp'
      summary: Logout
      tags:
      - user
  /users/register:
    post:
      consumes:
      - application/json
      description: Register a new user and send a verification email
      parameters:
      - description: User info
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/transport.createUserRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Success
          schema:
            $ref: '#/definitions/model.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/common.ErrResp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/common.ErrResp'
      summary: Register a new user
      tags:
      - user
  /users/verify-email:
    get:
      consumes:
      - application/json
      description: Verify email with code
      parameters:
      - description: Email
        in: query
        name: email
        required: true
        type: string
      - description: Code
        in: query
        name: code
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/common.ErrResp'
      summary: Verify email
      tags:
      - user
swagger: "2.0"
